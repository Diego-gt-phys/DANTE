# -*- coding: utf-8 -*-
"""
Created on Sat Mar 29 15:39:50 2025

This Python script reads multiple .csv files generated by DANTE.py and plots the data for analysis. 
It is not an interactive script; all inputs are manually specified in the code.

@author: Diego Garc√≠a Tejada
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

###############################################################################
# MR curves of NS
###############################################################################
"""
# READ THE DATA
data = {}

s_type = 1
d_type = 1
EsOS = ['soft', 'middle', 'stiff']

for eos_c in EsOS:
    df = pd.read_csv(f"data\{s_type}_{d_type}_{eos_c}.csv")
    data[f"{eos_c}"] = df
    
# PLOT THE DATA
# Configure the plot
plt.figure(figsize=(9.71, 6))
colors = sns.color_palette("Set1", 10)
eos_colors = {"soft": 0, "middle": 1, "stiff": 2}

for eos_c in EsOS:
    c = eos_colors[eos_c]
    plt.plot(data[f"{eos_c}"]["R"], data[f"{eos_c}"]["M"], label = rf'{eos_c}', color = colors[c], linewidth = 1.5, linestyle = '-', marker = "*",  mfc='k', mec = 'k', ms = 5)

# Add labels and title
plt.title(r'MR curves for the NS', loc='left', fontsize=15, fontweight='bold')
plt.xlabel(r'$R$ $\left[km\right]$', fontsize=15, loc='center')
plt.ylabel(r'$M$ $\left[ M_{\odot} \right]$', fontsize=15, loc='center')

# Set limits
plt.xlim(8, 17)
plt.ylim(0, 3.5)

# Configure ticks for all four sides
plt.tick_params(axis='both', which='major', direction='in', length=8, width=1.2, labelsize=12, top=True, right=True)
plt.tick_params(axis='both', which='minor', direction='in', length=4, width=1, labelsize=12, top=True, right=True)
plt.minorticks_on()

# Customize tick spacing 
plt.gca().set_xticks(np.arange(8, 17.1, 1))  # Major x ticks 
plt.gca().set_yticks(np.arange(0, 3.51, 0.5))  # Major y ticks 

# Set thicker axes
plt.gca().spines['top'].set_linewidth(1.5)
plt.gca().spines['right'].set_linewidth(1.5)
plt.gca().spines['bottom'].set_linewidth(1.5)
plt.gca().spines['left'].set_linewidth(1.5)

# Add a legend
plt.legend(fontsize=15, loc = "upper left", bbox_to_anchor=(0.009, 0.99), frameon=True, fancybox=False, ncol = 1, edgecolor="black", framealpha=1, labelspacing=0.2, handletextpad=0.3, handlelength=1.4, columnspacing=1)

# Save plot as PDF
plt.tight_layout()
plt.savefig("figures\MR_curves_NS.pdf", format="pdf", bbox_inches="tight")

plt.show()
"""
###############################################################################
# Stiffness test for NSs
###############################################################################
